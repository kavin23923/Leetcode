Rank : 42 / 4233 (雖然是virtual contest，但還是紀念一下，第一次破台進前1%)

1.
第一題簡單寫，算所有間隔兩個點的x,y距離差距，兩個點要走的距離其實就是dx,dy的最大值
因為比較小的值可以走斜的，剩下大的數字多出來的就走直的
複雜度O(n)，n為點的數量

2.
第二題也是簡單寫，先traverse一次原矩陣分別紀錄每一個row跟col個有幾台電腦
第二輪traverse就看，如果當前位置是電腦，且同一row or col有超過一台以上的電腦，代表這台電腦可以跟其他電腦溝通，累加答案
最後return答案就好
複雜度O(mn)，m和n為原矩陣的長寬

3.
第三題也頗簡單，用一個set存下目前可以使用的字串，且已經照字典序排列好了
接下來searchWord一個字元一個字元看，每一個字元traverse所有可以用的字串，看看當前位置有沒有和searchWord相等
有的話就先放入下一輪的set中，接著看這一輪的字串有沒有大於三，沒有就放進答案裡
最後return vector to vector就好
複雜度O(m*nlogn)，m是searchWord的長度，n是原本input有多少字可以用，因為set的操作要O(logn)的複雜度

4.
第四題也很簡單...看過最簡單的hard dp...
因為累加會爆，所以開一個long long的dp vector，每一輪順便mod一下
dp的長度為min(steps, arrLen)，因為steps最大只有500，則最遠也只能走到後面500格
而且這個位置一定不會對最後的答案造成影響(走不回來)
接著就開始跑dp，跑steps輪，每一輪當前的位置就是上一輪左中右三個位置的累加，最後回傳index 0的答案就好
複雜度O(n*min(m, n))，n為steps，m為arrLen
