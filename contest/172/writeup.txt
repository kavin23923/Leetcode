Rank : x / x

1.
第一題因為是easy直接硬幹，先把原本的數字拆成digit，然後從頭開始看，把第一個6換成9，全都是9就不動
複雜度O(n)，n是數字的長度，不過題目最多也就是四位數

2.
第二題是字串操作的問題，首先先把字都先拆出來
接下來，開一個vector代表每一個字目前用到哪裡了
最後就是每一輪traverse所有字，每個字拿一個字元出來，拿不出來就先記著space的數量，直到下一個有可以用的就先把space放上去
當有一輪都沒有任何一個字元可以使用就知道結束了
複雜度是O(n)，n為原字串的長度，在拆分的時候會看一次，後來traverse的時候會再看一次

3.
第三題是標準遞迴題，一開始以為很難，結果寫完發現超簡單...
終止條件是root為空，代表已經到底了
不然我們就遞迴左右子樹
接著如果自己沒有左右子樹(為leaf)且值等於target，代表自己要拿掉，那就return NULL，否則就return root
複雜度是O(n)，因為每一個點只會走一次

4.
第四題練習的時候不會寫，解法其實有點greedy
首先我們重新把input存成每個tap可以cover的range，如果本來的值是0就不理它，因為那個tap完全沒有用
接著把range照左界sort
再來就開始更新，每一輪一開始我們先把end設為目前可以跑到的最遠距離，接著只要左界比end小都代表這一輪可以到的點，同時更新最遠的距離
如果最後發現這一輪結束最遠距離跟end是一樣的，代表沒辦法前進了，中間有地方沒辦法cover，直接return -1
這個過程一直持續到最遠的距離已經跟n一樣，或是所以range都用完
跑的輪數就是回傳的答案
複雜度O(nlogn)，主要是因為sort，之後每一個都只會看一次
