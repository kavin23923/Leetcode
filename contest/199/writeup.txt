Rank : 982 / 14309

1.
第一題簡單做，新增一個string，然後就按照indices把原本的字元一個一個放進去
複雜度O(n)，n是字串長度

2.
第二題簡單greedy一下，從頭開始看，並且記錄從現在的位置到最後面是開還是關
如果當前的狀態跟target不同，就把答案加1，並把開關的設定反過來，全部跑完就是答案
複雜度O(n)，n是target的長度

3.
第三題我們用dfs，對於每一個節點，我們都先遞迴左右子樹，每個子樹都會回傳leaf到當前位置的距離
base case是假如root為NULL就返回空，如果是leaf就把1放進去
接著，我們開始窮舉左右子樹間的good leaf pair數，因為距離是sort過的，可以用O(n)的方式窮舉出來
做法是左vector從頭開始看，右vector從尾開始看，有點像2sum的方法
最後我們合併兩個vector，如果距離+1還是比distance小就放進新的vector
反之就不理它，因為從leaf到上一層的距離就已經跟distance相同，保證不會對good leaf pair有貢獻
最後sort這個vector就回傳回去
複雜度是O(n*nlogn)，對於每一個節點的操作是O(nlogn)，且每個節點都會走到一次，n是節點數

4.

