Rank : 1474 / 12715

1.
第一題很簡單，但題目看很久...反正就一個數字一個數字看，從1開始
如果當下的數字跟我要的不一樣，那肯定是先push再pop，不然就是只push
複雜度O(n)

2.
第二題直接窮舉所有可能，用prefix sum的方式先計算出prefix xor
然後窮舉所有可能的i,j,k，再比對a和b是不是一樣
複雜度O(n^3)，n為陣列的長度

3.
第三題錯了一次，因為一開始以為是顆二元樹，結果不是，但改了之後code更簡潔...
首先先把input改存成adjacency list的edge表示
接下來就用dfs traverse整個樹
dfs的回傳值代表走這個子樹的cost是多少
分別看所有的child，如果這個child遞迴之後有多找到apple，表示這個路徑是必須要走的，那就加上這條路徑的cost+2(因為走到那個節點再回來要多兩步)
反之如果這個child並沒有多發現apple，表示這個子樹可以不用走
最後回傳目前的cost
複雜度為O(n+E)，E為邊的個數，因為每個邊只會走一次

4.
知道是dp，但不會寫果斷放棄...
